// <auto-generated />
using EducationPortal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EducationPortal.Data.Migrations
{
    [DbContext(typeof(EducationPortalDbContext))]
    [Migration("20250822124323_FixedCourseJoinTablesForeignKeys")]
    partial class FixedCourseJoinTablesForeignKeys
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EducationPortal.Data.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Dotnet course to learn how to create C# Asp.Net Core MVC application",
                            Name = "Dotnet course"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Git course to learn how to use Git repositories",
                            Name = "Git course"
                        });
                });

            modelBuilder.Entity("EducationPortal.Data.Entities.CourseMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("MaterialId");

                    b.ToTable("CourseMaterials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            MaterialId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            MaterialId = 2
                        });
                });

            modelBuilder.Entity("EducationPortal.Data.Entities.CourseSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("SkillId");

                    b.ToTable("CourseSkills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            SkillId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            SkillId = 2
                        });
                });

            modelBuilder.Entity("EducationPortal.Data.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Ultimate C# Masterclass",
                            Type = "Video"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Asp.Net Core",
                            Type = "Video"
                        });
                });

            modelBuilder.Entity("EducationPortal.Data.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "C#"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Git"
                        });
                });

            modelBuilder.Entity("EducationPortal.Data.Entities.CourseMaterial", b =>
                {
                    b.HasOne("EducationPortal.Data.Entities.Course", "Course")
                        .WithMany("CourseMaterials")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EducationPortal.Data.Entities.Material", "Material")
                        .WithMany("CourseMaterials")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("EducationPortal.Data.Entities.CourseSkill", b =>
                {
                    b.HasOne("EducationPortal.Data.Entities.Course", "Course")
                        .WithMany("CourseSkills")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EducationPortal.Data.Entities.Skill", "Skill")
                        .WithMany("CourseSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("EducationPortal.Data.Entities.Course", b =>
                {
                    b.Navigation("CourseMaterials");

                    b.Navigation("CourseSkills");
                });

            modelBuilder.Entity("EducationPortal.Data.Entities.Material", b =>
                {
                    b.Navigation("CourseMaterials");
                });

            modelBuilder.Entity("EducationPortal.Data.Entities.Skill", b =>
                {
                    b.Navigation("CourseSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
