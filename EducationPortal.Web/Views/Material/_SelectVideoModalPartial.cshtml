@model List<VideoViewModel>

<dialog id="load-videos-modal" class="modal">
    <div class="modal-box 2xs:w-90 xs:w-112 sm:w-144 md:w-168 max-w-none">
        <form method="dialog">
            <div class="flex items-center justify-center">
                <h3 class="font-medium text-3xl ml-2 mb-4">@Html.Translate("SelectVideo")</h3>
            </div>

            <div id="load-videos-list" class="space-y-1 max-h-66 overflow-auto">
                @if (Model.Count > 0)
                {
                    @for (int i = 0; i < Model.Count; i++)
                    {
                        <div class="flex flex-col load-video-item rounded hover:bg-primary hover:text-primary-content cursor-pointer p-2"
                            data-id="@Model[i].Id" data-title="@Model[i].Title">
                            <div>
                                <div class="font-semibold text-lg">@Html.DisplayFor(c => c[i].Title)</div>
                                <div class="text-sm">@Html.DisplayNameFor(c => c[i].Duration): @Model[i].Duration,
                                    @Html.DisplayNameFor(c => c[i].Quality): @Model[i].Quality</div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center text-sm">@Html.Translate("NoVideosCreated")</div>
                }
            </div>
        </form>
    </div>
    <form method="dialog" class="modal-backdrop">
        <button>close</button>
    </form>
</dialog>
