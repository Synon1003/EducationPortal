@model ListCoursesViewModel
@{
    ViewData["Title"] = @Html.Translate("Courses");
    ViewBag.CurrentUrl = "~/Course/List";
}

<div class="flex items-center justify-center min-h-[calc(100vh-98px)]">
    <div class="card card-border" data-aos="zoom-in">
        <div class="card-body">
            <div class="flex items-center justify-start ml-2 mb-4">
                <div class="text-3xl font-medium">@Html.Translate("Courses")</div>
            </div>

            <div class="flex flex-col xs:flex-row xs:items-center xs:justify-between mx-2 gap-2">
                <span class="text-sm font-medium">@Html.Translate(@Model.TotalCountText): @Model.TotalCount</span>
                <div class="flex items-center justify-between space-x-2">
                    <form asp-controller="Course" asp-action="List" method="get" class="flex items-center">
                        <select class="select w-32" name="filter" onchange="this.form.submit()">
                            @foreach (var selectOption in Model.SelectOptions)
                            {
                                if (selectOption.Value == Model.CurrentOption)
                                {
                                    <option selected value=@selectOption.Value>@Html.Translate(@selectOption.Key)</option>
                                }
                                else
                                {
                                    <option value=@selectOption.Value>@Html.Translate(@selectOption.Key)</option>
                                }
                            }
                        </select>
                    </form>
                    <a asp-controller="Course" asp-action="Create"
                        class="btn btn-primary btn-md w-24">@Html.Translate("New")</a>
                </div>
            </div>

            @if (Model.TotalCount > 0)
            {
                <div class="overflow-x-auto">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(c => c.Courses.First().Name)</th>
                                <th>@Html.DisplayNameFor(c => c.Courses.First().Description)</th>
                                <th>@Html.DisplayNameFor(c => c.Courses.First().Skills)</th>
                                <th>@Html.DisplayNameFor(c => c.Courses.First().CreatedBy)</th>
                                @if (Model.CurrentOption == "completed" || Model.CurrentOption == "inprogress")
                                {
                                    <th>@Html.DisplayNameFor(c => c.Courses.First().UserCourse!.ProgressPercentage)</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var course in Model.Courses)
                            {
                                <tr>
                                    <td><a asp-controller="Course" asp-action="Details" asp-route-id="@course.Id"
                                            class="text-info">@course.Name</a></td>
                                    <td>@course.Description</td>
                                    <td>@(String.Join(", ", course.Skills))</td>
                                    <td>@course.CreatedBy</td>
                                    @if (Model.CurrentOption == "completed" || Model.CurrentOption == "inprogress")
                                    {
                                        <td>@course.UserCourse?.ProgressPercentage%</td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>
